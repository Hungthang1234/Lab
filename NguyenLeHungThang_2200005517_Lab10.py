{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMPCp1IU/oPtmAEf8t8q9jO"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HqkGceQbEHhK","executionInfo":{"status":"ok","timestamp":1734329349283,"user_tz":-420,"elapsed":264805,"user":{"displayName":"Hùng Thắng Nguyễn Lê","userId":"04142678779741849560"}},"outputId":"bcc7da0c-6515-445c-a8ee-dd69888f628f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting mpi4py\n","  Downloading mpi4py-4.0.1.tar.gz (466 kB)\n","\u001b[?25l     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/466.2 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K     \u001b[91m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[91m╸\u001b[0m \u001b[32m460.8/466.2 kB\u001b[0m \u001b[31m20.0 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m466.2/466.2 kB\u001b[0m \u001b[31m12.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n","  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n","  Installing backend dependencies ... \u001b[?25l\u001b[?25hdone\n","  Preparing metadata (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n","Building wheels for collected packages: mpi4py\n","  Building wheel for mpi4py (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for mpi4py: filename=mpi4py-4.0.1-cp310-cp310-linux_x86_64.whl size=4266340 sha256=d22d4cc7fcee4aeed0c66094e4fe45c5b68ae7982055b114f5c3663484604996\n","  Stored in directory: /root/.cache/pip/wheels/3c/ca/13/13218a83854023ccec184e3af482f0f038b434aa32c19afee8\n","Successfully built mpi4py\n","Installing collected packages: mpi4py\n","Successfully installed mpi4py-4.0.1\n"]}],"source":["!pip install mpi4py"]},{"cell_type":"code","source":["import multiprocessing\n","def print_cube (a):\n","    print(\"Cube: {}\".format(a*a*a))\n","def print_square(b, c):\n","    print(\"Square: {}\".format(b*c))\n","if __name__ == '__main__' :\n","  print(\"Nhap canh hinh lap phuong\")\n","  a = int(input())\n","  print(\"Nhap canh 1hinh chu nhat\")\n","  b =  int(input())\n","  print(\"Nhap canh 2 hinh chu nhat\")\n","  c =  int(input())\n","  p1 = multiprocessing.Process(target=print_cube, args=(a,))\n","  p2 = multiprocessing.Process(target=print_square, args=(b, c))\n","  p1.start()\n","  p2.start()\n","  p1.join()\n","  p2.join()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PPfmNvgMEhIR","executionInfo":{"status":"ok","timestamp":1734329604962,"user_tz":-420,"elapsed":9978,"user":{"displayName":"Hùng Thắng Nguyễn Lê","userId":"04142678779741849560"}},"outputId":"e35c5071-ddf4-4cfc-f0fb-d51c06810579"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Nhap canh hinh lap phuong\n","31\n","Nhap canh 1hinh chu nhat\n","12\n","Nhap canh 2 hinh chu nhat\n","3\n","Cube: 29791\n","Square: 36\n"]}]},{"cell_type":"code","source":["import time\n","import threading\n","\n","def countdown(count):\n","    while count >= 0:\n","        print(count)\n","        count -= 1\n","        time.sleep(1)\n","    print(\"Hết thời gian!!!\")\n","\n","# Bắt đầu đếm ngược từ 10\n","threading.Timer(0, countdown, args=[10]).start()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gnZdwCNeHeOE","executionInfo":{"status":"ok","timestamp":1734330421853,"user_tz":-420,"elapsed":356,"user":{"displayName":"Hùng Thắng Nguyễn Lê","userId":"04142678779741849560"}},"outputId":"12b0d024-ac4c-484c-8ef7-6769ed310769"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["10\n"]}]},{"cell_type":"code","source":["import multiprocessing\n","import time\n","import threading\n","# Luật Amdahl tính Speedup\n","def amdahl_speedup(P, N):\n","    return 1 / ((1 - P) + (P / N))\n","\n","# Tham số đầu vào\n","P = 0.30  # Phần có thể song song hóa\n","N1 = 6    # Số bộ xử lý ban đầu\n","N2 = 24   # Số bộ xử lý mới\n","\n","# Tính Speedup\n","speedup_N1 = amdahl_speedup(P, N1)\n","speedup_N2 = amdahl_speedup(P, N2)\n","\n","# Hiển thị kết quả\n","print(f\"Tốc độ cải thiện với {N1} bộ xử lý: {speedup_N1:.2f}\")\n","print(f\"Tốc độ cải thiện với {N2} bộ xử lý: {speedup_N2:.2f}\")\n","print(f\"Tỉ lệ cải thiện khi tăng từ {N1} lên {N2} bộ xử lý: {speedup_N2 / speedup_N1:.2f} lần\")\n","\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"arITzqB0H-FI","executionInfo":{"status":"ok","timestamp":1734331999402,"user_tz":-420,"elapsed":369,"user":{"displayName":"Hùng Thắng Nguyễn Lê","userId":"04142678779741849560"}},"outputId":"68f7ffa0-84ea-4fc1-8e06-8f0c86608862"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stdout","text":["Tốc độ cải thiện với 6 bộ xử lý: 1.33\n","Tốc độ cải thiện với 24 bộ xử lý: 1.40\n","Tỉ lệ cải thiện khi tăng từ 6 lên 24 bộ xử lý: 1.05 lần\n"]}]},{"cell_type":"code","source":["import numpy as np\n","from scipy import linalg\n","\n","\n","N = 4000\n","\n","\n","points = np.random.uniform(-1, 1, (N, 2))\n","\n","\n","distances = linalg.norm(points, axis=1)\n","\n","M = np.sum(distances <= 1)\n","\n","\n","pi_estimate = 4 * M / N\n","\n","# Output the result\n","print(f\"Number of points inside the circle: {M}\")\n","print(f\"Total number of points: {N}\")\n","print(f\"Estimated value of π: {pi_estimate:.6f}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YFA6ZIZBJrpI","executionInfo":{"status":"ok","timestamp":1734332004192,"user_tz":-420,"elapsed":344,"user":{"displayName":"Hùng Thắng Nguyễn Lê","userId":"04142678779741849560"}},"outputId":"319c6412-cbbb-4404-f214-38c40f9adc6b"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of points inside the circle: 3140\n","Total number of points: 4000\n","Estimated value of π: 3.140000\n"]}]},{"cell_type":"code","source":["%%writefile pr.py\n","from mpi4py import MPI\n","\n","\n","comm = MPI.COMM_WORLD\n","rank = comm.Get_rank()\n","\n","\n","a = 3\n","b = 2\n","\n","\n","if rank == 0:\n","    print(f\"Rank {rank}: a / b = {a / b}\")\n","elif rank == 1:\n","    print(f\"Rank {rank}: max(a, b) = {max(a, b)}\")\n","else:\n","    print(f\"Rank {rank}: \")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wEqgO-kQKteZ","executionInfo":{"status":"ok","timestamp":1734330888599,"user_tz":-420,"elapsed":343,"user":{"displayName":"Hùng Thắng Nguyễn Lê","userId":"04142678779741849560"}},"outputId":"f7e7f806-8e8a-4ecd-be09-4d98ab545eec"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Overwriting pr.py\n"]}]},{"cell_type":"code","source":["! mpirun --allow-run-as-root --oversubscribe -np 2 python pr.py"],"metadata":{"id":"rUdtLvwcLCeY"},"execution_count":null,"outputs":[]}]}