{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"private_outputs":true,"provenance":[],"authorship_tag":"ABX9TyMEVjDamvJKIF4m5w20BkSf"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"PfevjcQm2BCm"},"outputs":[],"source":["!pip install mpi4py"]},{"cell_type":"code","source":["import numpy as np\n","import time\n","def primes_sieve1(limit):\n","\n","\n","    limitn = limit+1\n","    primes = dict()\n","    for i in range(2, limitn): primes[i] = True\n","\n","    for i in primes:\n","        factors = range(i,limitn, i)\n","        for f in factors[1:]:\n","            primes[f] = False\n","    return [i for i in primes if primes[i]==True]\n","\n","\n","# Driver code\n","if __name__ == '__main__':\n","    limit = 108\n","    print(\"Following are the prime numbers smaller\"),\n","    print(\"than or equal to\", limit)\n","    primes_sieve1(limit)\n","    thoigian_thucthi = time.time()\n","\n","    thoigian_ketthuc = time.time()\n","    print( primes_sieve1(limit))\n","\n","    print(\"Thoi gian chay\",thoigian_ketthuc - thoigian_thucthi,\"giay\")"],"metadata":{"id":"sWPGSoQKB2f6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%%writefile primes.py\n","from mpi4py import MPI\n","import numpy as np\n","import time\n","def sives_primes(N, rank , size):\n","  sq_N =  int(N**0.5)\n","  if rank == 0:\n","    primes = np.ones(sq_N+1,dtype=bool)\n","    primes[0:2] = False\n","    for i in range(2, int(sq_N**0.5)+1):\n","      if primes[i]:\n","        primes[i * i : sq_N + 1 : i] = False\n","\n","    s_primes = np.where(primes)[0]\n","  else :\n","    s_primes = None\n","\n","  s_primes = MPI.COMM_WORLD.bcast(s_primes, root=0)\n","  low = sq_N + 1 + rank*(N - sq_N)//size\n","  high = sq_N + 1 + (rank+1)*(N - sq_N)//size\n","  segment = np.ones(high - low , dtype=bool )\n","\n","  for prime in s_primes :\n","    batdau = max(prime*prime,(low + prime - 1)//prime * prime)\n","    segment[batdau - low: high - low : prime] = False\n","\n","  local_primes = np.where(segment)[0]\n","  local_primes += low\n","  return local_primes\n","comm = MPI.COMM_WORLD\n","rank = comm.Get_rank ( )\n","size = comm.Get_size ( )\n","N = 108\n","comm.Barrier()\n","thoigian_thucthi = MPI.Wtime()\n","\n","\n","local_primes = sives_primes(N, rank, size)\n","\n","all_primes = comm.gather(local_primes,root = 0)\n","comm.Barrier()\n","thoigian_ketthuc = MPI.Wtime()\n","if rank == 0:\n","  all_primes = np.concatenate(all_primes)\n","\n","\n","\n","  print(len(all_primes))\n","  print(\"Thoi gian chay\",thoigian_ketthuc - thoigian_thucthi,\"giay\")\n","  print(all_primes)\n","  serial_time = 100\n","  parallel_time = thoigian_ketthuc - thoigian_thucthi\n","  speedup = serial_time/parallel_time\n","  print(\"Speedup:\",speedup)\n","\n","\n","\n","\n"],"metadata":{"id":"7K9keKsZ2_VL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["! mpirun --allow-run-as-root --oversubscribe -np 2 python primes.py"],"metadata":{"id":"crvxpdgm3Bkq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["! mpirun --allow-run-as-root --oversubscribe -np 4 python primes.py"],"metadata":{"id":"upS1PnSU3xIp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["! mpirun --allow-run-as-root --oversubscribe -np 6 python primes.py"],"metadata":{"id":"ZolykasM30AB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["! mpirun --allow-run-as-root --oversubscribe -np 8 python primes.py"],"metadata":{"id":"UcUwy5Ip31Yx"},"execution_count":null,"outputs":[]}]}